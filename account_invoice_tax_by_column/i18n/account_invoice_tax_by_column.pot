# Translation of OpenERP Server.
# This file contains the translation of the following modules:
#	* account_invoice_tax_by_column
#
msgid ""
msgstr ""
"Project-Id-Version: OpenERP Server 6.0.3\n"
"Report-Msgid-Bugs-To: support@openerp.com\n"
"POT-Creation-Date: 2011-10-24 12:13+0000\n"
"PO-Revision-Date: 2011-10-24 12:13+0000\n"
"Last-Translator: <>\n"
"Language-Team: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: \n"
"Plural-Forms: \n"

#. module: account_invoice_tax_by_column
#: model:ir.model,name:account_invoice_tax_by_column.model_account_invoice_tax
msgid "Invoice Tax"
msgstr ""

#. module: account_invoice_tax_by_column
#: code:addons/account_invoice_tax_by_column/account.py:61
#, python-format
msgid "Too many taxes with name %s"
msgstr ""

#. module: account_invoice_tax_by_column
#: code:addons/account_invoice_tax_by_column/account.py:59
#, python-format
msgid "The tax %s does not exist"
msgstr ""

#. module: account_invoice_tax_by_column
#: field:res.company,vertical_comp:0
msgid "Tax Vertical Calculation"
msgstr ""

#. module: account_invoice_tax_by_column
#: model:ir.model,name:account_invoice_tax_by_column.model_res_company
msgid "Companies"
msgstr ""

#. module: account_invoice_tax_by_column
#: model:ir.module.module,shortdesc:account_invoice_tax_by_column.module_meta_information
msgid "Account Invoice Tax - Computation By Column"
msgstr ""

#. module: account_invoice_tax_by_column
#: constraint:res.company:0
msgid "Error! You can not create recursive companies."
msgstr ""

#. module: account_invoice_tax_by_column
#: model:ir.module.module,description:account_invoice_tax_by_column.module_meta_information
msgid "    \n"
"    -Invoice taxes: \n"
"        legend:\n"
"            TA(l)    TaxAmount for line l\n"
"            TBA(l)   TaxBaseAmount for line l\n"
"            TA(t)    TaxAmount for tax t\n"
"            TBA(t)   TaxBaseAmount for tax t\n"
"            \n"
"        default behaviour: \n"
"            openerp by default calculates taxes line by line as a function of line tax base amount \n"
"            and then groups these amounts by tax.\n"
"            TA(l) = f(TBA(l)\n"
"            TA(t) = sum( round( TA(l) ) )    /sum on lines l to which tax t is applied\n"
"        this module behaviour: \n"
"            In Italy the correct way to compute taxes is to first compute the tax base amount TBA(t) \n"
"            and the compute TA as a function of TBA(t)\n"
"            TBA(t) = sum( TBA(t) )    /sum on lines l to which tax t is applied\n"
"            TA(t) = f( TBA(t) )\n"
"        the result difference is small but important\n"
"\n"
"    "
msgstr ""

#. module: account_invoice_tax_by_column
#: code:addons/account_invoice_tax_by_column/account.py:59
#: code:addons/account_invoice_tax_by_column/account.py:61
#, python-format
msgid "Error"
msgstr ""

#. module: account_invoice_tax_by_column
#: model:ir.model,name:account_invoice_tax_by_column.model_account_tax
msgid "account.tax"
msgstr ""

#. module: account_invoice_tax_by_column
#: sql_constraint:account.tax:0
msgid "The tax name must be unique!"
msgstr ""

